buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+'    // Latest 1.x.x release
	}
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//TODO:: is this required?
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

group = 'com.zut'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
	}
	mavenCentral()
	jcenter()
}


ext {
	springCloudGcpVersion = '1.0.0.RELEASE'
	springCloudVersion = 'Finchley.SR1'
}

dependencies {
//	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-jersey'){
		exclude group:'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude group:'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
//	implementation('org.springframework.cloud:spring-cloud-gcp-starter')
//	compile 'com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.0.11'

	compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's

	compile 'javax.servlet:javax.servlet-api:3.1.0'

	compile 'org.projectlombok:lombok:1.16.18'
	compile 'org.eclipse.collections:eclipse-collections:9.2.0'
	compile 'org.jsoup:jsoup:1.10.2'
	compile 'org.json:json:20180813'

//	providedCompile 'org.slf4j:jul-to-slf4j'

//	runtimeOnly('mysql:mysql-connector-java')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

//<groupId>org.slf4j</groupId>
//      <artifactId>jul-to-slf4j</artifactId>
//<scope>provided</scope>

dependencyManagement {
	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}









//dependencies {
//	compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
//	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
//
//	compile 'jstl:jstl:1.2'
//
//// Add your dependencies here.
////  compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java
//
//	testCompile 'junit:junit:4.12'
//	testCompile 'com.google.truth:truth:0.33'
//	testCompile 'org.mockito:mockito-all:1.10.19'
//
//	testCompile 'com.google.appengine:appengine-testing:+'
//	testCompile 'com.google.appengine:appengine-api-stubs:+'
//	testCompile 'com.google.appengine:appengine-tools-sdk:+'
//}

// Always run unit tests
//appengineDeploy.dependsOn test
//appengineStage.dependsOn test

// [START model]
appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration

	}
}

//test {
//	useJUnit()
//	testLogging.showStandardStreams = true
//	beforeTest { descriptor ->
//		logger.lifecycle("test: " + descriptor + "  Running")
//	}
//
//	onOutput { descriptor, event ->
//		logger.lifecycle("test: " + descriptor + ": " + event.message )
//	}
//	afterTest { descriptor, result ->
//		logger.lifecycle("test: " + descriptor + ": " + result )
//	}
//}
//// [END model]
//
//group   = "com.example.appenginej8"        // Generated output GroupId
//version = "1.0-SNAPSHOT"       // Version in generated output

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8
// [END gradle]
